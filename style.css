/* define the color palette in the root variable  */
:root{
    --background: #101114;
    --primary-color: #1C1D20;
    --secondary-color: #4A4D57;
    --accent-color: #00FFC4;
    --text-color: #F9F9F9;
}
*{
    margin: 0;
    padding: 0;
}
html{
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 16pt;
    color: var(--text-color);
}
body{
    min-width: 100vh;
    padding: 10px;
    background-color: var(--background);
    display: flex;
    flex-direction: column;
    align-items: center;
}
h1{
    margin-top: 100px;
    margin-bottom: 20px;
    font-size: 3rem;
    font-weight: 800;
    text-transform: uppercase;
    text-align: center;
    color: var(--accent-color);
}
.wrapper{
    width: 700px;
    max-width: 100%;
    display: flex;
    flex-direction: column;
    gap: 10px;
}
#todo-input{
    /* elements size stays constistent even when we add padding  */
    box-sizing: border-box;
    padding: 12px 20px;
    width: 100%;
    background: none;
    border: 2px solid var(--secondary-color);
    border-radius: 1000px;
    font: inherit;
    color: var(--text-color);
    caret-color: var(--accent-color);
}
/* highlighting of text field is removed given by browser  */
#todo-input:focus{
    outline: none;
}

/* fixing the add button inside the input field  */
form{
    position: relative;
}
#add-button{
    /* this will place the button in the upper right corner of the webpage , so we will change the reference point (meaning where this top and right should should apply) by setting the position of form to relative  */
    position: absolute;
    top: 0;
    right: 0;

    background-color: var(--accent-color);
    height: 100%;
    padding: 0 30px;
    border: none;
    border-radius: 1000px;
    font: inherit;
    font-weight: 600;
    color: var(--background);
    cursor: pointer;
}

.todo{
    margin-bottom: 10px;
    padding: 0 16px;
    background-color: var(--primary-color);
    border-radius: 15px;
    display: flex;
    align-items: center;
}
.todo .todo-text{
    padding: 15px;
    padding-right: 0;
    flex-grow: 1;
    transition: 1s ease;
}
.delete-button{
    padding: 3px;
    background: none;
    border: none;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}
.delete-button svg{
    transition: 500ms ease;
}
.delete-button:hover svg{
    fill: #ff0033;
}
.custom-checkbox{
    border: 2px solid var(--accent-color);
    border-radius: 50%;
    min-height: 20px;
    min-width: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
    /* to prevent it from squezeing from other flex-box elements */
    flex-shrink: 0;
    transition: 1s ease;
    cursor: pointer;
}
/* we want to change the appearance of the custom checkbox depending on whether the actual checkbox is checked or not   */
/* ~ is a sibling selector to select our custom checkbox present if it is checked */
input[type="checkbox"]:checked ~ .custom-checkbox{
    background-color: var(--accent-color);
}
input[type="checkbox"]:checked ~ .custom-checkbox svg{
    fill: var(--primary-color);
}
input[type="checkbox"]:checked ~ .todo-text{
    text-decoration:line-through;
    color: var(--secondary-color);
}
input[type="checkbox"]{
    display: none;
}

/* responsive code for smaller devices  */
@media(max-width: 500px){
    html{
        font-size: 12pt;
    }
    #add-button{
        position: unset;
        width: 100%;
        margin-top: 10px;
        padding: 15px;
        height: auto;
    }
    h1{
        margin-top: 50px;
        font-size: 15vw;
    }
}